apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"

import com.android.build.OutputFile

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    /* Folders */
    root = file("../")
    reactNativeDir = file("../node_modules/react-native")
    codegenDir = file("../node_modules/react-native-codegen")
    cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    debuggableVariants = ["liveDebug", "stagingDebug"]

    /* Bundling */
    bundleAssetName = "index.android.bundle"
    entryFile = "index.js"
    bundleCommand = "ram-bundle"

    /* Hermes Commands */
    hermesCommand = "../node_modules/hermes-engine/%OS-BIN%/hermes"

    /* Code Push */
    bundleInStaging = true
    bundleInRelease = true
}

/**
 * Set this to true to create four separate APKs instead of one,
 * one for each native architecture. This is useful if you don't
 * use App Bundles (https://developer.android.com/guide/app-bundle/)
 * and want to have separate APKs to upload to the Play Store.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = true

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'

/**
 * Whether to enable the Hermes JS engine.
 */
def enableHermes = project.ext.react.enableHermes

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.appfounders.mobile"
    
    defaultConfig {
        applicationId "com.appfounders.mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        
        // Build config fields
        buildConfigField "String", "API_BASE_URL", "\"https://api.appfounders.com\""
        buildConfigField "String", "WEB_BASE_URL", "\"https://appfounders.com\""
        buildConfigField "boolean", "ENABLE_CRASHLYTICS", "true"
        
        // Manifest placeholders
        manifestPlaceholders = [
            appName: "@string/app_name",
            appIcon: "@mipmap/ic_launcher"
        ]
        
        // Test instrumentation runner
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // ProGuard files
        proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            shrinkResources false
            
            buildConfigField "String", "API_BASE_URL", "\"http://10.0.2.2:3000/api\""
            buildConfigField "boolean", "ENABLE_CRASHLYTICS", "false"
            
            manifestPlaceholders = [
                appName: "AppFounders Debug"
            ]
        }
        
        staging {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".staging"
            debuggable true
            minifyEnabled true
            shrinkResources true
            
            buildConfigField "String", "API_BASE_URL", "\"https://staging-api.appfounders.com\""
            buildConfigField "boolean", "ENABLE_CRASHLYTICS", "true"
            
            manifestPlaceholders = [
                appName: "AppFounders Staging"
            ]
            
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources enableProguardInReleaseBuilds
            
            buildConfigField "String", "API_BASE_URL", "\"https://api.appfounders.com\""
            buildConfigField "boolean", "ENABLE_CRASHLYTICS", "true"
            
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    // If you use App Bundles (https://developer.android.com/guide/app-bundle/)
    // and want to have separate APKs to upload to the Play Store,
    // uncomment the line below:
    // bundle {
    //     language {
    //         enableSplit = false
    //     }
    //     density {
    //         enableSplit = true
    //     }
    //     abi {
    //         enableSplit = true
    //     }
    // }

    if (enableSeparateBuildPerCPUArchitecture) {
        splits {
            abi {
                reset()
                enable enableSeparateBuildPerCPUArchitecture
                universalApk false  // If true, also generate a universal APK
                include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    packagingOptions {
        pickFirst "**/libc++_shared.so"
        pickFirst "**/libjsc.so"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/license.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/notice.txt"
        exclude "META-INF/ASL2.0"
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    
    // React Native
    implementation "com.facebook.react:react-native:+"  // From node_modules
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    
    // AndroidX
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.activity:activity:1.7.2"
    implementation "androidx.fragment:fragment:1.6.1"
    implementation "androidx.multidex:multidex:2.0.1"
    
    // Material Design
    implementation "com.google.android.material:material:1.9.0"
    
    // Firebase
    implementation platform("com.google.firebase:firebase-bom:32.2.3")
    implementation "com.google.firebase:firebase-analytics"
    implementation "com.google.firebase:firebase-crashlytics"
    implementation "com.google.firebase:firebase-messaging"
    implementation "com.google.firebase:firebase-config"
    implementation "com.google.firebase:firebase-auth"
    implementation "com.google.firebase:firebase-firestore"
    
    // Google Play Services
    implementation "com.google.android.gms:play-services-auth:20.7.0"
    implementation "com.google.android.gms:play-services-base:18.2.0"
    
    // Biometric Authentication
    implementation "androidx.biometric:biometric:1.1.0"
    
    // Image Loading
    implementation "com.github.bumptech.glide:glide:4.15.1"
    annotationProcessor "com.github.bumptech.glide:compiler:4.15.1"
    
    // Network
    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.11.0"
    
    // JSON
    implementation "com.google.code.gson:gson:2.10.1"
    
    // Testing
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
        exclude group:"com.facebook.fbjni"
    }
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:"com.facebook.fbjni"
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
        exclude group:"com.facebook.fbjni"
    }

    if (enableHermes) {
        implementation("com.facebook.react:hermes-engine:+") { // From node_modules
            exclude group:"com.facebook.fbjni"
        }
    } else {
        implementation jscFlavor
    }
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.implementation
    into 'libs'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
